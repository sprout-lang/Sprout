import { Program } from './ast';
export declare class Parser {
    private readonly source;
    private tokens;
    private position;
    constructor(source: string);
    parse(): Program;
    private parseStatement;
    private parseLet;
    private parseAssignment;
    private parseListen;
    private parseSet;
    private parseAdd;
    private parseToggle;
    private parseSend;
    private parseThenClause;
    private parseLambdaBlock;
    private parseLambdaParameters;
    private parseTemplate;
    private parseBind;
    private parseCallJs;
    private parseIf;
    private parseFor;
    private parseBlock;
    private parseBlockBody;
    private parseExpression;
    private parseLambdaExpression;
    private extractParams;
    private parseLambdaBody;
    private parseLogicalExpression;
    private parseEqualityExpression;
    private parseRelationalExpression;
    private parseAdditiveExpression;
    private parseMultiplicativeExpression;
    private parseUnaryExpression;
    private parseCallMemberExpression;
    private parsePrimaryExpression;
    private parseList;
    private parseMap;
    private parseRender;
    private parseGet;
    private looksLikeAssignment;
    private consumeIdentifier;
    private consumeIdentifierToken;
    private consumeIdentifierValue;
    private consumeOperator;
    private consumeType;
    private consumePunctuation;
    private consumeIfPunctuation;
    private peek;
    private peekAhead;
    private peekIdentifier;
    private peekOperator;
    private peekPunctuation;
    private skipNewlines;
    private error;
    private is;
}
//# sourceMappingURL=parser.d.ts.map